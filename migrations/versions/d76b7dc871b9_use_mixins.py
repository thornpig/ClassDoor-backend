"""use mixins

Revision ID: d76b7dc871b9
Revises: 
Create Date: 2018-06-22 01:32:54.405190

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd76b7dc871b9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('primary_street', sa.String(length=100), nullable=False),
    sa.Column('secondary_street', sa.String(length=100), nullable=True),
    sa.Column('city', sa.String(length=30), nullable=False),
    sa.Column('state', sa.String(length=30), nullable=False),
    sa.Column('zipcode', sa.Integer(), nullable=False),
    sa.Column('country', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('person',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('first_name', sa.String(length=30), nullable=False),
    sa.Column('last_name', sa.String(length=30), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.CheckConstraint('length(first_name) > 0 AND length(last_name) > 0'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['person.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('class',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('title', sa.String(length=80), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('min_age', sa.Integer(), nullable=True),
    sa.Column('max_age', sa.Integer(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.CheckConstraint('length(title) > 0'),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title', 'creator_id', name='title_creator_unique')
    )
    op.create_table('dependent',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dp_first_name', sa.String(length=30), nullable=False),
    sa.Column('dp_last_name', sa.String(length=30), nullable=False),
    sa.Column('dependency_id', sa.Integer(), nullable=True),
    sa.CheckConstraint('length(dp_first_name) > 0 AND length(dp_last_name) > 0'),
    sa.ForeignKeyConstraint(['dependency_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['id'], ['person.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('dependency_id', 'dp_first_name', 'dp_last_name', name='dependent_name_dependency_id_unique')
    )
    op.create_table('class_address_association',
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['address.id'], ),
    sa.ForeignKeyConstraint(['class_id'], ['class.id'], ),
    sa.PrimaryKeyConstraint('class_id', 'address_id')
    )
    op.create_table('class_session',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('class_id', sa.Integer(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['class.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('enrollment',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('class_session_id', sa.Integer(), nullable=False),
    sa.Column('enrolled_person_id', sa.Integer(), nullable=False),
    sa.Column('terminated', sa.Boolean(), nullable=False),
    sa.Column('initiator_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['class_session_id'], ['class_session.id'], ),
    sa.ForeignKeyConstraint(['enrolled_person_id'], ['person.id'], ),
    sa.ForeignKeyConstraint(['initiator_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('class_session_id', 'enrolled_person_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('enrollment')
    op.drop_table('class_session')
    op.drop_table('class_address_association')
    op.drop_table('dependent')
    op.drop_table('class')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('person')
    op.drop_table('address')
    # ### end Alembic commands ###
